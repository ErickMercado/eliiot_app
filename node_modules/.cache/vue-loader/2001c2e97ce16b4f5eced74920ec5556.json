{"remainingRequest":"/Users/josepfm/Dreamworld/eliiot/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/josepfm/Dreamworld/eliiot/src/pages/legal/LegalPage.html?vue&type=template&id=4257bf1e&scoped=true&","dependencies":[{"path":"/Users/josepfm/Dreamworld/eliiot/src/pages/legal/LegalPage.html","mtime":1627536882000},{"path":"/Users/josepfm/Dreamworld/eliiot/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josepfm/Dreamworld/eliiot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImxlZ2FsIiB9IH0sIFsKICAgICAgX2MoInNlY3Rpb24iLCB7IHN0YXRpY0NsYXNzOiAiY29udGVudCIgfSwgWwogICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIkF2aXNvIGRlIFByaXZhY2lkYWQiKV0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dCIgfSwgWwogICAgICAgICAgX2MoInN0cm9uZyIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJQb2zDrXRpY2EgZGUgcHJpdmFjaWRhZCB5IHByb3RlY2Npw7NuIGRlIGRhdG9zIHBlcnNvbmFsZXMgZGUgQWNjaW9uYW1vcyB0dXMgZGF0b3MsIFMuQS4gZGUgQy5WLiIKICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoInN0cm9uZyIsIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJBQ0NJT05BTU9TIFRVUyBEQVRPUywgUy5BLiBERSBDLlYuIChlbiBhZGVsYW50ZSBkZW5vbWluYWRhIGNvbW8gRUxJSU9UIG8gZWwgUmVzcG9uc2FibGUpIgogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBlbiBjdW1wbGltaWVudG8gYSBsbyBlc3RhYmxlY2lkbyBlbiBsYSBMZXkgRmVkZXJhbCBkZSBQcm90ZWNjacOzbiBkZSBEYXRvcyBQZXJzb25hbGVzIGVuIFBvc2VzacOzbiBkZSBQYXJ0aWN1bGFyZXMgeSBzdSBSZWdsYW1lbnRvIChlbiBsbyBzdWNlc2l2byBsYSDigJxMZXnigJ0pLCBlbiB0b2RvIG1vbWVudG8gc2UgY29tcHJvbWV0ZSBhIHJlc3BldGFyIGxhIHByaXZhY2lkYWQgeSBjb25maWRlbmNpYWxpZGFkIGRlIHN1cyBEYXRvcyBQZXJzb25hbGVzIHkgRGF0b3MgUGVyc29uYWxlcyBTZW5zaWJsZXMgKGVuIGxvIHN1Y2VzaXZvIGxvcyDigJxEYXRvc+KAnSksIHBhcmEgbG8gY3VhbCBoYSBlc3RhYmxlY2lkbyBhIHRyYXbDqXMgZGUgbGEgcHJlc2VudGUgUG9sw610aWNhIGRlIFByaXZhY2lkYWQgeSBQcm90ZWNjacOzbiBkZSBEYXRvcyBQZXJzb25hbGVzIChlbiBsbyBzdWNlc2l2byDigJxMYSBQb2zDrXRpY2HigJ0pLCBsb3MgbGluZWFtaWVudG9zIHF1ZSByZWdpcsOhbiBsYSBmb3JtYSBlbiBxdWUgc2UgcmVjYWJhbiwgdXRpbGl6YW4sIGFsbWFjZW5hbiwgcmVzZ3VhcmRhbiB5IGNvbXBhcnRlbiBsb3MgRGF0b3MuICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIExhIFBvbMOtdGljYSByZXN1bHRhIGRlIG9ic2VydmFuY2lhIG9ibGlnYXRvcmlhIGEgcGFydGlyIGRlIHN1IHB1YmxpY2FjacOzbiwgcGFyYSB0b2RvIGVsIHBlcnNvbmFsIGRlICIKICAgICAgICAgICksCiAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiRWxpaW90IildKSwKICAgICAgICAgIF92bS5fdigiLiAiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgUGFyYSBlZmVjdG9zIGRlIGxhIHByZXNlbnRlIFBvbMOtdGljYSB5IGRlIGNvbmZvcm1pZGFkIGNvbiBsYSBsZWdpc2xhY2nDs24gYXBsaWNhYmxlIHNlIGRlZmluZSBsbyBzaWd1aWVudGU6ICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIlJlc3BvbnNhYmxlLiIpXSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIg4oCTIHNlcsOhIHRvZGEgcGVyc29uYSBmw61zaWNhIG8gbW9yYWwgZGUgY2Fyw6FjdGVyIHByaXZhZG8gcXVlIGRlY2lkZSBzb2JyZSBlbCB0cmF0YW1pZW50byBkZSBkYXRvcyBwZXJzb25hbGVzLiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJFbmNhcmdhZG8uIildKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiDigJMgbGEgcGVyc29uYSBmw61zaWNhIG8ganVyw61kaWNhIHF1ZSBzb2xhIG8ganVudGFtZW50ZSBjb24gb3RyYXMgdHJhdGUgZGF0b3MgcGVyc29uYWxlcyBwb3IgY3VlbnRhIGRlbCByZXNwb25zYWJsZS4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiUmVjb2xlY2Npw7NuIHkgdXNvIGRlIGxhIGluZm9ybWFjacOzbiIpXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIEVsaWlvdCBvIGVsIEVuY2FyZ2FkbyBzZXLDoSBxdWllbiByZWNvbGVjdGFyw6EgeSBhbG1hY2VuYXLDoSBsb3MgRGF0b3MgZW4gdW5hIGJhc2UgZGUgZGF0b3MgY2lmcmFkYS4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgRWxpaW90IG8gZWwgRW5jYXJnYWRvLCDDum5pY2FtZW50ZSByZWNvbGVjdGFyw6EgYXF1ZWxsb3MgZGF0b3MgcXVlIHJlc3VsdGVuIG5lY2VzYXJpb3MgcGFyYSBlbCBjdW1wbGltaWVudG8gZGUgbG9zIGZpbmVzIHBhcmEgbG9zIHF1ZSBmdWVyb24gcmVjb2dpZG9zLCBhIG1lbm9zIHF1ZSBzZSBjdWVudGUgY29uIGVsIGNvbnNlbnRpbWllbnRvIGRlbCB0aXR1bGFyIGRlIGRpY2hvcyBEYXRvcyBwYXJhIHV0aWxpemFybG9zIGNvbiB1biBmaW4gZGlzdGludG8uICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIExvcyBEYXRvcyBzZXLDoW4gcmVjb3BpbGFkb3MgZGlyZWN0YW1lbnRlIGRlIHN1IHRpdHVsYXIgZGUgbWFuZXJhIHZvbHVudGFyaWEgbyBhIHRyYXbDqXMgZGUgdW4gdGVyY2VybyBhdXRvcml6w6FuZG9sbyBlbCB0aXR1bGFyIGRlIGVzdG9zLCBhIHRyYXbDqXMgZGUgbWVjYW5pc21vcyBjbGFyb3MgeSB0cmFuc3BhcmVudGVzIHkgc2llbXByZSBjb250YW5kbyBjb24gc3UgY29uc2VudGltaWVudG8sIGVsIGN1YWwgZW4gZWwgY2FzbyBkZSBsb3MgRGF0b3MgUGVyc29uYWxlcyBTZW5zaWJsZXMgc2Vyw6EgcmVjYWJhZG8gZGUgZm9ybWEgZXhwcmVzYSwgdGFsIHkgY29tbyBsbyBzZcOxYWxhIGxhIExleS4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgRW4gY2FzbyBkZSBxdWUgRUxJSU9UIHJlY2FiZSBEYXRvcyBQZXJzb25hbGVzIFNlbnNpYmxlcyBkZWwgdGl0dWxhciwgZGViZXLDoSBjb250YXIgY29uIGVsIGNvbnNlbnRpbWllbnRvIGV4cHJlc28gZGVsIG1pc21vLiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBFbiBjYXNvIGRlIHF1ZSBleGlzdGFuIERhdG9zIHBhcmEgbG9zIHF1ZSBzZSBzZcOxYWxlIHF1ZSBlcyBvcGNpb25hbCBlbCBwcm9wb3JjaW9uYXJsb3MgbyBubywgcXVlZGFyw6EgYSBkZWNpc2nDs24gZGVsIHRpdHVsYXIgZGUgZXN0b3Mgc3UgZW50cmVnYS4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgRW4gY2FzbyBkZSBxdWUgRWxpaW90IHJlcXVpZXJhIG9idGVuZXIgRGF0b3MgUGVyc29uYWxlcyBvIERhdG9zIFBlcnNvbmFsZXMgU2Vuc2libGVzIGRlIHBlcnNvbmEgZGlzdGludGEgYWwgdGl0dWxhciBkZSBsb3MgZGF0b3MsIGRlYmVyw6EgaGFjZXJsbyBkZWwgY29ub2NpbWllbnRvIGRlbCB0aXR1bGFyIGRlIGxvcyBtaXNtb3MuICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIEVsaWlvdCBwb2Ryw6EgcmVhbGl6YXIgbGEgdHJhbnNmZXJlbmNpYSBkZSBsb3MgRGF0b3MgUGVyc29uYWxlcyBkZWwgVGl0dWxhciBhIGxhcyBpbnN0aXR1Y2lvbmVzIGZpbmFuY2llcmFzIHByb3BvcmNpb25hZGFzIHBvciBlbCBtaXNtbyBtZWRpYW50ZSBsYSBBUExJQ0FDScOTTiwgY29uIGxhIGZpbmFsaWRhZCBkZSBwb2RlciBwcm9wb3JjaW9uYXIgYSBkaWNoYXMgaW5zdGl0dWNpb25lcyBsYSBpbmZvcm1hY2nDs24gbmVjZXNhcmlhIHBhcmEgcXVlIMOpc3RhcyDDumx0aW1hcyBwdWVkYW4gcmVhbGl6YXIgZWwgcmFzdHJlbyBkZSBsYXMgZGV1ZGFzIGRlbCBUaXR1bGFyIHkgw6lzdGFzIHB1ZWRhbiBzZXIgbmVnb2NpYWRhcyBwb3IgRUxJSU9UIHBhcmEgbGEgcG9zaWJsZSBvYnRlbmNpw7NuIGRlIHVuIHBsYW4gZGUgcGFnb3MgeSB1bmEgcmVlc3RydWN0dXJhY2nDs24gZGUgZGljaGFzIGRldWRhczsgc2luIGVtYmFyZ28sIEVMSUlPVCBubyBkaXZ1bGdhcsOhIGxvcyBEYXRvcyBhIG5pbmfDum4gdGVyY2Vybywgc2Fsdm8gY29uIGVsIGNvbnNlbnRpbWllbnRvIGRlbCB0aXR1bGFyIGRlIGxvcyBEYXRvcywgZWwgY3VhbCBlbiBlbCBjYXNvIGRlIGxvcyBEYXRvcyBQZXJzb25hbGVzIFNlbnNpYmxlcyBzZXLDoSByZWNhYmFkbyBkZSBmb3JtYSBleHByZXNhLCB0YWwgeSBjb21vIGxvIHNlw7FhbGEgbGEgTGV5LiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbCiAgICAgICAgICAgIF92bS5fdigiQWxtYWNlbmFtaWVudG8geSBSZXNndWFyZG8gZGUgbG9zIERhdG9zIFBlcnNvbmFsZXMiKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIEVsaWlvdCBjb250YXLDoSBlbiB0b2RvIG1vbWVudG8gY29uIGxhcyBtw6FzIGFsdGFzIG1lZGlkYXMgZGUgc2VndXJpZGFkIHTDqWNuaWNhcywgZsOtc2ljYXMgeSBhZG1pbmlzdHJhdGl2YXMgcXVlIHNlIHJlcXVpZXJhbiBwYXJhIGVsIHRyYXRhbWllbnRvLCBhbG1hY2VuYW1pZW50byB5IHJlc2d1YXJkbyBkZSBsb3MgRGF0b3MgcXVlIGxhIG1pc21hIHJlY2FiZS4gRXN0byBjb24gZWwgZmluIGRlIGV2aXRhciBxdWUgZGljaGEgaW5mb3JtYWNpw7NuIHB1ZGllcmEgc2VyIHZ1bG5lcmFkYSwgYWx0ZXJhZGEsIGRlc3RydWlkYSBvIGRhw7FhZGEuICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIExhIGluZm9ybWFjacOzbiBzZSBhbG1hY2VuYXLDoSBlbiB1bmEgYmFzZSBkZSBkYXRvcyBjaWZyYWRhLiBBc2ltaXNtbywgcGFyYSBlbCBjYXNvIGRlIGxvcyBkYXRvcyBwZXJzb25hbGVzIHNlbnNpYmxlcywgc2UgdXRpbGl6YXLDoSB1biBkb2JsZSBjaWZyYWRvIChlbCBkZSBiYXNlIGRlIGRhdG9zICsgMSBhIG5pdmVsIGRlIGFwbGljYWNpw7NuKSwgYXNpbWlzbW8sIGxvcyBkb2N1bWVudG9zIHNlbnNpYmxlcyBxdWUgbG9zIHVzdWFyaW9zIG90b3JndWVuIHNlcsOhbiBjaWZyYWRvcyB5IGd1YXJkYWRvcyBlbiB1biBidWNrZXQgKGF3cyBzMykgcHJpdmFkby4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgRWxpaW90IGltcGxlbWVudGFyw6EgbGFzIG1lZGlkYXMgZGUgc2VndXJpZGFkIG5lY2VzYXJpYXMgcGFyYSBsYSBkZXN0cnVjY2nDs24gZGUgbWFuZXJhIHBlcm1hbmVudGUgZGUgYXF1ZWxsYSBpbmZvcm1hY2nDs24gcXVlIHlhIG5vIHJlc3VsdGUgbmVjZXNhcmlhLiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBUb2RvIGVsIHBlcnNvbmFsIGRlIEVsaWlvdCBxdWUgdGVuZ2EgYWNjZXNvIGEgbG9zIERhdG9zLCBlbiBjdWFscXVpZXIgZXRhcGEgZGVsIHRyYXRhbWllbnRvIGRlIGVzdG9zLCBzZSBlbmN1ZW50cmEgb2JsaWdhZG8gYSByZXNwZXRhciBsYXMgbWVkaWRhcyBkZSBzZWd1cmlkYWQgZXN0YWJsZWNpZGFzIHkgYSBtYW50ZW5lciBsYSBtw6FzIGFic29sdXRhIGNvbmZpZGVuY2lhbGlkYWQgcmVzcGVjdG8gZGUgZGljaG9zIERhdG9zLiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBRdWVkYSBwcm9oaWJpZGEgbGEgY29waWEsIG1vZGlmaWNhY2nDs24sIGNhbmNlbGFjacOzbiwgY29ycmVjY2nDs24sIGFsdGVyYWNpw7NuIG8gZGVzdHJ1Y2Npw7NuIGRlIGxvcyBEYXRvcywgc2luIGNvbnRhciBjb24gbGEgYXV0b3JpemFjacOzbiBkZWwgdGl0dWxhciBkZSBlc3Rvcy4gIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgRWwgdGl0dWxhciBkZSBsb3MgRGF0b3MgdGVuZHLDoSBlbiB0b2RvIG1vbWVudG8gZWwgZGVyZWNobyBhbCBBY2Nlc28sIFJlY3RpZmljYWNpw7NuLCBDb3JyZWNjacOzbiB5IE9wb3NpY2nDs24gKGRlcmVjaG9zIOKAnEFSQ0/CqCkgZGUgc3VzIERhdG9zLiBFc3RvcyBkZXJlY2hvcyBzZSBkZWJlcsOhbiBoYWNlciB2YWxlciBjb25mb3JtZSBhbCBwcm9jZWRpbWllbnRvIGVzdGFibGVjaWRvIGVuIGVsIEF2aXNvIGRlIFByaXZhY2lkYWQgY29ycmVzcG9uZGllbnRlLiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBQYXJhIGVmZWN0b3MgZGUgbG8gZXN0YWJsZWNpZG8gZW4gZWwgcMOhcnJhZm8gYW50ZXJpb3IsIEVsaWlvdCBkZXNpZ25hIHJlc3BlY3RpdmFtZW50ZSBjb21vIHBlcnNvbmEgbyBkZXBhcnRhbWVudG8gZGUgZGF0b3MgcGVyc29uYWxlcyBhIFsqXSBxdWllbmVzIHNlcsOhbiBsb3MgZW5jYXJnYWRvcyBkZSByZXNndWFyZGFyIGxhIGJhc2UgZGUgZGF0b3MgcGVyc29uYWxlcywgYXPDrSBjb21vIGRlIGluZm9ybWFyIGFsIHRpdHVsYXIgeSBhIGxhcyBhdXRvcmlkYWRlcyBjb3JyZXNwb25kaWVudGVzIGRlIGN1YWxxdWllciB2aW9sYWNpw7NuIGEgbGEgc2VndXJpZGFkIGRlIGxvcyBkYXRvcyB5IGRlIGRhciB0csOhbWl0ZSBhIGxhcyBzb2xpY2l0dWRlcyBkZSBsb3MgdGl0dWxhcmVzIGVuIHJlbGFjacOzbiBjb24gbG9zIGRlcmVjaG9zIEFSQ08uICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIk1vZGlmaWNhY2lvbmVzIGEgTGEgUG9sw610aWNhIildKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgRWxpaW90IHNlIHJlc2VydmEgZWwgZGVyZWNobyBkZSBtb2RpZmljYXIgTGEgUG9sw610aWNhIGVuIGN1YWxxdWllciBtb21lbnRvLCBoYWNpZW5kbyBkZWwgY29ub2NpbWllbnRvIGRlIGxvcyB0aXR1bGFyZXMgZGUgbG9zIERhdG9zIGxhIMO6bHRpbWEgYWN0dWFsaXphY2nDs24gZGUgZXN0YSwgaW5kaWNhbmRvIGxhIGZlY2hhIGRlIG1vZGlmaWNhY2nDs24gY29ycmVzcG9uZGllbnRlLiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJTYW5jaW9uZXMiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBFbiBjYXNvIGRlIGluY3VtcGxpbWllbnRvIGEgbGEgUG9sw610aWNhIHNlIGFwbGljYXLDoW4gbGFzIHNhbmNpb25lcyBzZcOxYWxhZGFzIGVuIGxhIExleSwgaW5kZXBlbmRpZW50ZW1lbnRlIGRlIGN1YWxxdWllciBzYW5jacOzbiBkZSBjYXLDoWN0ZXIgbGFib3JhbCBlc3RhYmxlY2lkYSBpbnRlcm5hbWVudGUgcG9yIEVsaWlvdC4gIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}