{"remainingRequest":"/Users/josepfm/Dreamworld/eliiot/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/josepfm/Dreamworld/eliiot/src/components/Footer/Footer.html?vue&type=template&id=edbb25a2&scoped=true&","dependencies":[{"path":"/Users/josepfm/Dreamworld/eliiot/src/components/Footer/Footer.html","mtime":1628000651736},{"path":"/Users/josepfm/Dreamworld/eliiot/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/josepfm/Dreamworld/eliiot/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}